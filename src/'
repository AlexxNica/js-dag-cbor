var cbor = require('cbor')
var clone = require('./clone')

exports = module.exports

var type = {
  mlink: 'http://merkle-link'
}

var context = {
  merkleweb: {
    '@context': {
      mlink: type.mlink
    }
  }
}

exports.context = context
exports.type = type

exports.expand = function (obj, contexts) {
  var objC = clone(obj) // clone to not mess with original obj
  var ctx = []

  if (objC['@context']) {
    ctx.push(objC['@context'])
    delete objC['@context']
  }

  if (contexts) {
    if (Array.isArray(contexts)) {
      contexts.forEach(function (context) {
        ctx.push(context)
      })
    } else {
      ctx.push(contexts)
    }
  }

  var strObj = JSON.stringify(obj)
  
}

exports.addLink = function (obj, key, hash) {
  if (obj[key]) {
    return new Error('key already exists on object')
  }

  obj[key] = {
    '@type': types.mlink,
    '@value': hash
  }

}

exports.marshal = function (obj) {
  return cbor.encode(obj)
}

exports.unmarshal = function (buf, cb) {
  cbor.decode(buf, cb)
}
